<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>com.github.creativeworks</groupId>
    <artifactId>spring-boot-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>spring-boot-docker</artifactId>
  <name>Spring Boot Docker Integration</name>
  <packaging>war</packaging>

  <properties>
    <start-class>com.github.creativeworks.docker.main.SpringBootDockerApp</start-class>
    <docker.registry>docker.io</docker.registry>
    <docker.namespace>creativeworks</docker.namespace>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.github.creativeworks</groupId>
      <artifactId>spring-boot-cxf-common</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-features-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.yml</include>
          <include>**/*.yaml</include>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <excludes>
          <exclude>**/*.xml</exclude>
          <exclude>**/*.yml</exclude>
          <exclude>**/*.yaml</exclude>
          <exclude>**/*.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <packagingExcludes>
            WEB-INF/classes/bootstrap.yaml,
            WEB-INF/classes/application.yaml
          </packagingExcludes>
          <archive>
            <manifest>
              <mainClass>${start-class}</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <executable>true</executable>
          <jvmArguments>-ea</jvmArguments>
          <mainClass>${start-class}</mainClass>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-docker-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>target</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/Docker</directory>
                  <includes>
                    <include>*</include>
                    <include>*/*</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.4.3</version>
        <executions>
          <execution>
            <id>package-push-latest</id>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
              <goal>tag</goal>
              <goal>push</goal>
            </goals>
            <configuration>
              <tag>latest</tag>
            </configuration>
          </execution>
          <execution>
            <id>package-push-stable</id>
            <phase>deploy</phase>
            <goals>
              <goal>build</goal>
              <goal>tag</goal>
              <goal>push</goal>
            </goals>
            <configuration>
              <tag>${project.version}</tag>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <repository>${docker.registry}/${docker.namespace}/${project.build.finalName}</repository>
          <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
          <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
          <contextDirectory>${project.build.directory}</contextDirectory>
          <retryCount>3</retryCount>
          <buildArgs>
            <WAR_FILE>${project.build.finalName}.war</WAR_FILE>
          </buildArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>